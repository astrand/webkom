Coding standards
================
* Use two blank rows between classes and standalone functions, one
  blank row between methods in the same class.

* Class names as usual: ThisIsAClass.

* Variable names like this: some_nice_variable.

* Variables representing numbers should have "num" as a part their
  names rather than "no". Example: conf_num (conference number). NOTE:
  kom.py uses "no". 

* Python files that are specific to webkom should have a name
  beginning with "webkom_" (like webkom_utils.py). Python files that
  are not specific to WebKOM should not have this prefix. If the
  module contains a single class, it should names with the first
  letter capitalized (like TranslatorCache.py). 


* Imports: Do not import modules with *. Exceptions to this rule is
  webkom_constants, HTMLgen and webkom_utils.


Handling submits
================
The user should always be able to press reload in the browser, without
risking posting articles twice etc. This works as follows: The classes
that is responsible for submit response generation should either
directly handle multiple submits, or use a special mechanism. It works
as follows: Instead of appending directly to the response document,
create an Container and append to it. Before returning, call
self.submit_redir() with this container as argument. 

Look at LeaveConfSubmit for an example of how to do this. 

