
System overview
===============

+-------+  1  +---------+  2  +-----+  3  +-------+
|lyskomd|-----|webkom.py|-----|httpd|-----|browser|
+-------+     +---------+     +-----+     +-------+
                   | 4
              +-----------+
              |fifoterm.py|
              +-----------+

1) Protocol A
2) FastCGI sockets
3) HTTP
4) FIFO-pair


WebKOM Components
=================
webkom.py is the central component. It is a threaded, persistent
FastCGI process. 

httpd is any FastCGI-capable webbserver. 

fifoterm.py is an optional interactive console, mainly used for
debugging. 

webkom.py and fifoterm.py must be running on the same machine (because
FIFOs are used for communication). All other components can run on
different machines. This instruction assumes that all components run
om the same machine. 


Requirements
============
* Python 2.0 or newer.
* FastCGI-capable webbserver (eg. Apache with mod_fastcgi).
* HTMLgen 2.2 (apply patches found on WebKOM homepage)


Installation
============
Generic installation instructions can be found on the WebKOM homepage
(http://www.lysator.liu.se/lyskom/klienter/webkom/) (currently in
swedish only). 

Most Apache-users should be able to use apache-setup.py, which does
all required configuration. 


1. Find out the web server document root. In Apache, this is the
   DocumentRoot variable in httpd.conf. In this document, the document
   root is denoted <documentroot>. 

   Note that special script directories like /home/httpd/cgi-bin/ or
   /home/httpd/fcgi-bin/ are not used by WebKOM; the WebKOM FastCGI
   application is <documentroot>/webkom/webkom.py. 

2. Decide a WebKOM installation directory and place the distribution
   files there. /opt/webkom is recommended. In this document, this
   directory is denoted <webkom>. 

3. Create these links:

   <documentroot>/webkom/images -> <webkom>/images
   <documentroot>/webkom/webkom.py -> webkom.py.wrapper

4. Create webkom.py.wrapper. It should look like this:
   
   #!/bin/sh
   # This is the place where to select Python interpreter for WebKOM.
   PATH=$PATH
   export PATH
   PYTHONOPTIMIZE=1
   export PYTHONOPTIMIZE
   exec <webkom>/webkom.py

   Replace <webkom> with your WebKOM installation directory. If your
   preferred Python binary is not in the default PATH, add the correct
   path here. Make sure this script is executable.

5. Configure your web server. For Apache, this means adding a 
   new section to httpd.conf. Example:
   
   FastCgiServer /home/httpd/html/webkom/webkom.py -idle-timeout 60
   <Directory /home/httpd/html/webkom>
   Options FollowSymLinks
   DirectoryIndex webkom.py
   Allow from all
   <Files webkom.py>
       SetHandler fastcgi-script
   </Files>
   </Directory>
      
   Add this section just below the section beginning with 
   <Directory />. 
   
6. Configure constants in webkom_constants.py. Documentation for these
   can be found in the file CONSTANTS.


Running multiple WebKOM servers on one machine
==============================================
It is possible to run several server applications ("instances") on one
single machine. For example, sometimes it's useful to run a separate
instance for testing purposes. Use the instructions below in addition
to the normal installation instruction for setting up an additional
server instance. You must setup additional instances manually; the
script apache-setup.py cannot be used. 

1. The FastCGI application for the extra instance will be 
   <documentroot>/<instancename>/webkom.py. <instancename> could be,
   for example, "testwebkom". 

2. You must use a separate installation directory for each
   instance. It's not necessary to use the same directory name as the
   instance name. 

3. The links should be:

   <documentroot>/<instancename>/images -> <webkom>/images
   <documentroot>/<instancename>/webkom.py -> webkom.py.wrapper

4. No additional information. 

5. Use the configuration from the first instance as a template. 

6. Make sure to change FIFO_PREFIX to something uniq.
